import { ILogger } from '@lsk4/log';
import { getComment, jsonToFile } from '@lsk4/stringify';
import { mapSeries } from 'fishbird';
import { mkdir, unlink } from 'fs/promises';

import { log as defaultLog } from '../utils/log.js';
import { createService } from './createService.js';

type BuildOptions = {
  buildDir?: string;
  log?: ILogger;
  force?: boolean;
};

export async function build(serviceDirname: string, options: BuildOptions = {}) {
  const log = options.log || defaultLog;
  const buildDir = options.buildDir || `${serviceDirname}/build`;

  const service = await createService(serviceDirname, options);
  await unlink(`${buildDir}`).catch(() => {});
  await mkdir(buildDir, { recursive: true });
  // @ts-ignore
  const { config } = service;
  const { files = [] } = config;
  await mapSeries(files, async (fileOptions: any) => {
    const { type, filename, handler } = fileOptions;
    const res = await handler(fileOptions, config);
    // console.log('fileOptions', fileOptions);
    const comment = getComment({
      filename,
      values: [
        ['File type', fileOptions.type],
        ['Cred type', fileOptions.credType],
        ['Cred name', fileOptions.name],
        ['Server', service.getServiceHostname()],
        ['Project', service.getProjectPath()],
        ['Project ID', service.getProjectId()],
        ['Project Url', service.getProjectUrl()],
        ['CI/CD Setting', service.getProjectCICDSettingURL()],
      ],
      footer:
        service.getProjectCredsUrl() &&
        `
Auto generated by ${service.getProjectCredsUrl()}
If you want to change something, please contact admin repo: ${service.getProjectCredsOwner()}.
      `.trim(),
    });
    await jsonToFile(`${buildDir}/${filename}`, res, {
      type,
      compare: !options.force,
      comment,
    });
    log.info(`[build] ${service.getProjectPath()} (${filename})`);
  });
}
